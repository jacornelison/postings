function ffbm_makefpdata_beam(experiment,year,rxNum,filetomake)
% function ffbm_makefpdata_beam(experiment,year,rxNum)
%
% Function to make fpdata files that use the beamparameters.
% The fpdata files involved are 
% fp_data_beamshapeflags.csv
% and fp_data_aboffsetflags.csv
% These files are made per receiver and have a specific naming scheme
% in order to be read by get_array_info
% Use function after beam param csv file has been made
% Move and commit files to aux_data/fp_data/ once satisfied
%
% BE CAREFUL: The beam width is hard coded by frequency at the top
%
% experiment='keck'
% year= 2012 or 2013
% rxNum for keck
% filetomake is 'aboffsetflags' or 'beamshapeflags'
%
% CLW June 16 2014

% figure out focal plane name

medsig_100 = 0.3042;
medsig_150 = 0.2131;

switch year
  case 2012
    [P,K] = ParameterRead('/n/bicepfs2/keck/keck_aux_data/fp_data/fp_data_master_20111226.csv');
    [pp,ind] = get_array_info('20120201');
  case 2013
    [P,K] = ParameterRead('/n/bicepfs2/keck/keck_aux_data/fp_data/fp_data_master_20130201.csv');
    [pp,ind] = get_array_info('20130201');
  case 2014
    [P,K] = ParameterRead('/n/bicepfs2/keck/keck_aux_data/fp_data/fp_data_master_20131201.csv');
    [pp,ind] = get_array_info('20140201');
end

cutind = (pp.rx == rxNum);
pp = structcut(pp,cutind);
ind = make_ind(pp);
 
yrstr = ['_' num2str(year) '0101'];
% Day this file is generated
day = datestr(now,'yyyymmdd');
filename = ['fp_data_' filetomake '_' P.fpu{rxNum+1} yrstr '.csv']

% Read beamparam file
[p,k] = ParameterRead(['/n/bicepfs2/keck/keck_aux_data/beams/beamwid' ...
      yrstr '.csv']);
% Cut it down to one rx
p = structcut(p,cutind);

[tmp,kk] = ParameterRead('/n/bicepfs2/keck/keck_aux_data/fp_data/fp_data_e1_20120101.csv');

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%5
switch filetomake
  case 'beamshapeflags'
    
    switch year
      case 2012
	kn.comments{1}='# Keck 2012';
	kn.comments{2}='# Following bicep2_aux_data/fp_data/fp_data_beamshapeflags_bicep2_20100105.csv';
	kn.comments{3}='# Generated by ~clwong/20130703_beamparam/makefpdatabeamshapeflags.m';
	kn.comments{4}='# Channel type code: L=light detector, D=dark detector, O=open input,,,,,,,,,,';
	kn.comments{5}=['# sigma, p, and c are taken from the file keck_aux_data/beams/beams_keck_obs2012_rx*_' bfiledate '.csv'];
	kn.comments{6}='# Beam parameters detailed in http://bmode.caltech.edu/~spuder/keck_analysis_logbook/analysis/20130716_beamparam2012/';
	kn.comments{7}='# sigma - per detector beamwidth';
	kn.comments{8}='# sigma_pct - per detector beamwidth divided by the nominal beamwidth (median sigma over rgls = .2131 degrees)';
	kn.comments{9}='# sigma_diff - differential beamwidth';
	kn.comments{10}='# sigma_diff_pct - differential beamwidth divided by nominal beamwidth';
	kn.comments{11}='# ellip - per detector (p^2+c^2)^(1/2)';
	kn.comments{12}='# ellip_diff - differential (p^2+c^2)^(1/2)';
	kn.comments{13}='# pc_diff - quadrature sum of differential p and differential c ((p_a-p_b)^2 + (c_a-c_b)^2)^(1/2)';
	kn.filename=['aux_data/fp_data/' filename]; 
	kn.created=[day ' CLW'];
	kn.fields=[kk.fields(1:8) {'sigma' 'sigma_pct' 'sigma_diff' 'sigma_diff_pct' 'ellip' 'ellip_diff' 'pc_diff'}];
	kn.units=[kk.units(1:8) {'degrees' 'unitless' 'unitless' 'unitless' 'unitless' 'unitless' 'unitless'}];
	kn.formats=[kk.formats(1:8) {'double' 'double' 'double'  'double' ...
	      'double' 'double' 'double'}];
      case 2013
	kn.comments{1}='# Keck 2013';
	kn.comments{2}='# Following bicep2_aux_data/fp_data/fp_data_beamshapeflags_bicep2_20100105.csv';
	kn.comments{3}='# Generated by ~clwong/20131113_channelcuts2013/makefpdatabeamshapeflags_2013.m';
	kn.comments{4}='# Channel type code: L=light detector, D=dark detector, O=open input,,,,,,,,,,';
	kn.comments{5}=['# sigma, p, and c are taken from the file keck_aux_data/beams/beams_keck_obs2012_rx*_' bfiledate '.csv'];
	kn.comments{6}='# Beam parameters detailed in http://bmode.caltech.edu/~spuder/keck_analysis_logbook/analysis/20131114_beamparam2013/';
	kn.comments{7}='# sigma - per detector beamwidth';
	kn.comments{8}='# sigma_pct - per detector beamwidth divided by the nominal beamwidth (median sigma over rgls = .2131 degrees)';
	kn.comments{9}='# sigma_diff - differential beamwidth';
	kn.comments{10}='# sigma_diff_pct - differential beamwidth divided by nominal beamwidth';
	kn.comments{11}='# ellip - per detector (p^2+c^2)^(1/2)';
	kn.comments{12}='# ellip_diff - differential (p^2+c^2)^(1/2)';
	kn.comments{13}='# pc_diff - quadrature sum of differential p and differential c ((p_a-p_b)^2 + (c_a-c_b)^2)^(1/2)';
	kn.filename=['aux_data/fp_data/' filename]; 
	kn.created=[day ' CLW'];
	kn.fields=[kk.fields(1:8) {'sigma' 'sigma_pct' 'sigma_diff' 'sigma_diff_pct' 'ellip' 'ellip_diff' 'pc_diff'}];
	kn.units=[kk.units(1:8) {'degrees' 'unitless' 'unitless' 'unitless' 'unitless' 'unitless' 'unitless'}];
	kn.formats=[kk.formats(1:8) {'double' 'double' 'double'  'double' ...
	      'double' 'double' 'double'}];
      case 2014
	kn.comments{1}='# Keck 2014';
	kn.comments{2}='# Following bicep2_aux_data/fp_data/fp_data_beamshapeflags_bicep2_20100105.csv';
	kn.comments{3}='# Generated by ~keck_analysis/beammap/ffbm_makefpdata_beam.m';
	kn.comments{4}='# Channel type code: L=light detector, D=dark detector, O=open input,,,,,,,,,,';
	kn.comments{5}=['# sigma, p, and c are taken from the file keck_aux_data/beams/beams_keck_obs2012_rx*_20140705'  '.csv'];
	kn.comments{6}='# Beam parameters detailed in http://bmode.caltech.edu/~spuder/keck_analysis_logbook/analysis/20140708_keck2014_beamparam/';
	kn.comments{7}='# sigma - per detector beamwidth';
	kn.comments{8}='# sigma_pct - per detector beamwidth divided by the nominal beamwidth (median sigma over rgls = .2131 degrees)';
	kn.comments{9}='# sigma_diff - differential beamwidth';
	kn.comments{10}='# sigma_diff_pct - differential beamwidth divided by nominal beamwidth';
	kn.comments{11}='# ellip - per detector (p^2+c^2)^(1/2)';
	kn.comments{12}='# ellip_diff - differential (p^2+c^2)^(1/2)';
	kn.comments{13}='# pc_diff - quadrature sum of differential p and differential c ((p_a-p_b)^2 + (c_a-c_b)^2)^(1/2)';
	kn.filename=['aux_data/fp_data/' filename]; 
	kn.created=[day ' KSK'];
	kn.fields=[kk.fields(1:8) {'sigma' 'sigma_pct' 'sigma_diff' 'sigma_diff_pct' 'ellip' 'ellip_diff' 'pc_diff'}];
	kn.units=[kk.units(1:8) {'degrees' 'unitless' 'unitless' 'unitless' 'unitless' 'unitless' 'unitless'}];
	kn.formats=[kk.formats(1:8) {'double' 'double' 'double'  'double' ...
	      'double' 'double' 'double'}];
    end
  
    % pp = from get_array_info
    % p = grabbed from beamparam file
    
    sig = p.sigma;
    err_sig = p.err_sigma;
    e_p = p.p;
    err_e_p = p.err_p;
    e_c = p.c;
    err_e_c = p.err_c;
    
    pn.gcp = pp.gcp;
    pn.tile = pp.tile;
    pn.det_col = pp.det_col;
    pn.det_row = pp.det_row;
    pn.pol = pp.pol;
    pn.mce_col = pp.mce_col;
    pn.mce_row = pp.mce_row;
    pn.type = pp.type;
    
    pn.sigma = sig;
    switch pp.band(1) 
      case 100
	pn.sigma_pct = sig./medsig_100;
      case 150
	pn.sigma_pct = sig./medsig_150; 
    end
    pn.sigma_diff(ind.e,1) = NaN;
    pn.sigma_diff(ind.a,1) = sig(ind.a) - sig(ind.b);
    pn.sigma_diff(ind.b,1) = pn.sigma_diff(ind.a);
    switch pp.band(1)
      case 100
	pn.sigma_diff_pct = pn.sigma_diff./medsig_100;
      case 150
	pn.sigma_diff_pct = pn.sigma_diff./medsig_150; 
    end
    pn.ellip = sqrt(e_p.^2 + e_c.^2);
    pn.ellip_diff(ind.e,1) = NaN;
    pn.ellip_diff(ind.a,1) = pn.ellip(ind.a) - pn.ellip(ind.b);
    pn.ellip_diff(ind.b,1) = pn.ellip_diff(ind.a);
    AA = (e_p(ind.a) - e_p(ind.b)).^2;
    BB = (e_c(ind.a) - e_c(ind.b)).^2;
    pn.pc_diff(ind.e,1) = NaN;
    pn.pc_diff(ind.a,1) = sqrt(AA + BB);
    pn.pc_diff(ind.b,1) = pn.pc_diff(ind.a);

 
  case 'aboffsetflags'
  
    [x,y] = pol2cart(p.theta*pi/180,p.r);
    dx = x(ind.a) - x(ind.b);
    dy = y(ind.a) - y(ind.b);
    pn.aboffset(ind.e,1) = NaN;
    pn.aboffset(ind.a) = sqrt(dx.^2 + dy.^2);
    pn.aboffset(ind.b) = pn.aboffset(ind.a);
    switch pp.band(1)
      case 100
	pn.aboffset_pct = pn.aboffset./medsig_100;
      case 150
	pn.aboffset_pct = pn.aboffset./medsig_150;
    end
    
    switch year
      case 2012
	kn.comments{1}='# Keck 2012';
	kn.comments{2}='# Following bicep2_aux_data/fp_data/fp_data_aboffsetflags_bicep2_20100105.csv';
	kn.comments{3}='# Generated by ~clwong/20130703_beamparam/makefpdatabeamshapeflags.m';
	kn.comments{4}='# Channel type code: L=light detector, D=dark detector, O=open input,,,,,,,,,,';
	kn.comments{5}='# A/B offset magnitude is calculated from far field beam maps taken in Feb 2012'; 
	kn.comments{6}='# detailed in http://bmode.caltech.edu/~spuder/keck_analysis_logbook/analysis/20130716_beamparam2012/';
	kn.comments{7}='# A/B offset as a ratio of the keck beam sigma (0.2131 deg) is expressed in the column aboffset_pct; it has the same information but is merely scaled';
	kn.filename=['aux_data/fp_data/' filename]; 
	kn.created=[day ' CLW'];
	kn.fields=[kk.fields(1:8) {'aboffset' 'aboffset_pct'}];
	kn.units=[kk.units(1:8) {'degrees' 'unitless'}];
	kn.formats=[kk.formats(1:8) {'double' 'double'}];
      case 2013
	kn.comments{1}='# Keck 2013';
	kn.comments{2}='# Following bicep2_aux_data/fp_data/fp_data_aboffsetflags_bicep2_20100105.csv';
	kn.comments{3}='# Generated by ~clwong/20131112_channelcuts2013/makefpdatabeamshapeflags_2013.m';
	kn.comments{4}='# Channel type code: L=light detector, D=dark detector, O=open input,,,,,,,,,,';
	kn.comments{5}='# A/B offset magnitude is calculated from far field beam maps taken in Feb 2013'; 
	kn.comments{6}='# detailed in http://bmode.caltech.edu/~spuder/keck_analysis_logbook/analysis/20131114_beamparam2013/';
	kn.comments{7}='# A/B offset as a ratio of the keck beam sigma (0.2131 deg) is expressed in the column aboffset_pct; it has the same information but is merely scaled';
	kn.filename=['aux_data/fp_data/' filename]; 
	kn.created=[day ' CLW'];
	kn.fields=[kk.fields(1:8) {'aboffset' 'aboffset_pct'}];
	kn.units=[kk.units(1:8) {'degrees' 'unitless'}];
	kn.formats=[kk.formats(1:8) {'double' 'double'}];
      case 2014
	kn.comments{1}='# Keck 2014';
	kn.comments{2}='# Following bicep2_aux_data/fp_data/fp_data_aboffsetflags_bicep2_20100105.csv';
	kn.comments{3}='# Generated by keck_analysis/beammap/ffbm_makefpdata_beam.m';
	kn.comments{4}='# Channel type code: L=light detector, D=dark detector, O=open input,,,,,,,,,,';
	kn.comments{5}='# A/B offset magnitude is calculated from far field beam maps taken in Feb/Mar 2014'; 
	kn.comments{6}='# detailed in http://bmode.caltech.edu/~spuder/keck_analysis_logbook/analysis/20140708_keck2014_beamparam/';
	kn.comments{7}='# A/B offset as a ratio of the keck beam sigma (0.3042/0.2131 deg) is expressed in the column aboffset_pct; it has the same information but is merely scaled';
	kn.filename=['aux_data/fp_data/' filename]; 
	kn.created=[day ' KSK'];
	kn.fields=[kk.fields(1:8) {'aboffset' 'aboffset_pct'}];
	kn.units=[kk.units(1:8) {'degrees' 'unitless'}];
	kn.formats=[kk.formats(1:8) {'double' 'double'}];
    end
    
    pn.gcp = pp.gcp;
    pn.tile = pp.tile;
    pn.det_col = pp.det_col;
    pn.det_row = pp.det_row;
    pn.pol = pp.pol;
    pn.mce_col = pp.mce_col;
    pn.mce_row = pp.mce_row;
    pn.type = pp.type;
   

end
  
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Save

ParameterWrite(['beamfiles/' filename],pn,kn)

return